[0m[[0m[0mdebug[0m] [0m[0m> Exec(collectAnalyses, None, Some(CommandSource(network-1)))[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Processing event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: initialized: JsonRpcNotificationMessage(2.0, initialized, {})[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled notification received: textDocument/didOpen: JsonRpcNotificationMessage(2.0, textDocument/didOpen, {"textDocument":{"uri":"file:///home/vitlinda/pjs/scala-loci-examples/src/main/scala/simplechat/Chat.scala","languageId":"scala","version":1,"text":"package simplechat\n\nimport loci.language._\nimport loci.language.transmitter.rescala._\nimport loci.communicator.tcp._\nimport loci.serializer.upickle._\n\nimport rescala.default._\n\n@multitier object Chat {\n    @peer type Server <: { type Tie <: Multiple[Client] }\n    @peer type Client <: { type Tie <: Single[Server] }\n\n    val message = on[Client] { Evt[String]() }\n\n    val publicMessage = on[Server] sbj { client: Remote[Client] =>\n        message.asLocalFromAllSeq collect {\n            case (remote, message) if remote != client => message\n        }\n    }\n\n    def main() = on[Client] {\n        publicMessage.asLocal observe println\n\n        for (line <- scala.io.Source.stdin.getLines())\n            message.fire(line)\n    }\n}\n\nobject Server extends App {\n    multitier start new Instance[Chat.Server](\n        listen[Chat.Client] { TCP(43053) }\n    )\n}\n\nobject Client extends App {\n    multitier start new Instance[Chat.Client](\n        connect[Chat.Server] { TCP(\"localhost\", 43053)}\n    )\n}\n"}})[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Compile / collectAnalyses[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0manalysis location (/home/vitlinda/pjs/scala-loci-examples/target/scala-2.13/zinc/inc_compile_2.13.zip,true)[0m
[0m[[0m[32msuccess[0m] [0m[0mTotal time: 0 s, completed Apr 3, 2023, 6:28:08 PM[0m
[0m[[0m[0mdebug[0m] [0m[0munmatched Done event for requestId None: None[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mUnhandled request received: shutdown: JsonRpcRequestMessage(2.0, â™¨1, shutdown, null})[0m
